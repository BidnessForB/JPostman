# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Compile and unit test

on:
  push:
    branches: 
      - '!main'
  pull_request:
  workflow_dispatch:

env:
  MAVEN_ARGS: -V -B --no-transfer-progress -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java: [ 11, 17, 21 ]
    name: 'Linux JDK ${{ matrix.java }}'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Build and test with Maven
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run:  |
          mkdir ./test-output
          mvn ${MAVEN_ARGS} test

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
