{
	"info": {
		"_postman_id": "d5383e29-05fe-4cf9-8971-1ba8d2da0190",
		"name": "Test Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23889826"
	},
	"item": [
		{
			"name": "Test URL",
			"item": [
				{
					"name": "URL 1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://foo.com/bar/bat.json",
							"protocol": "http",
							"host": [
								"foo",
								"com"
							],
							"path": [
								"bar",
								"bat.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "//foo.com/bar/bat.json",
							"path": [
								"",
								"foo.com",
								"bar",
								"bat.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 3",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foo.com/bar/bat.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foo.com",
								"bar",
								"bat.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://foo.com/bar/bat.json?foo=1&bar=2",
							"protocol": "http",
							"host": [
								"foo",
								"com"
							],
							"path": [
								"bar",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://foo.com/bar/bat.json?foo=1&bar=",
							"protocol": "http",
							"host": [
								"foo",
								"com"
							],
							"path": [
								"bar",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 6",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}foo.com/bar/bat.json?foo=1&bar=",
							"host": [
								"{{baseUrl}}foo",
								"com"
							],
							"path": [
								"bar",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 7",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}foo.com/bar/:path1/bat.json?foo=1&bar=",
							"host": [
								"{{baseUrl}}foo",
								"com"
							],
							"path": [
								"bar",
								":path1",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "path1",
									"value": "path-value"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 8",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}foo.com:8080/bar/:path1/bat.json?foo=1&bar=",
							"host": [
								"{{baseUrl}}foo",
								"com"
							],
							"port": "8080",
							"path": [
								"bar",
								":path1",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "path1",
									"value": "path-value"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "URL 9",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/foo.com:8080/bar/:path1/bat.json?foo=1&bar=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"foo.com:8080",
								"bar",
								":path1",
								"bat.json"
							],
							"query": [
								{
									"key": "foo",
									"value": "1"
								},
								{
									"key": "bar",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "path1",
									"value": "path-value"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cat Fact",
			"item": [
				{
					"name": "Facts",
					"item": [
						{
							"name": "get Random Fact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Response time is less than 800ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(800);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=200",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200",
											"description": "maximum length of returned fact"
										}
									]
								},
								"description": "Returns a random fact\n\nThis is documentation added in the collection editor"
							},
							"response": [
								{
									"name": "Normal response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fact?max_length=200",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fact"
											],
											"query": [
												{
													"key": "max_length",
													"value": "200"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fact\": \"adipisicing cillum ullamco consectetur dolore\",\n  \"length\": 200\n}"
								},
								{
									"name": "Fact not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fact?max_length=200",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fact"
											],
											"query": [
												{
													"key": "max_length",
													"value": "200"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a list of facts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/facts?max_length=200&limit=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"facts"
									],
									"query": [
										{
											"key": "max_length",
											"value": "200"
										},
										{
											"key": "limit",
											"value": "2",
											"description": "limit the amount of results returned"
										}
									]
								},
								"description": "Returns a a list of facts\n\nTHis is additional documentation added in the c ollection editor"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/facts?max_length=200&limit=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"facts"
											],
											"query": [
												{
													"key": "max_length",
													"value": "200"
												},
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"fact\": \"Lorem eiusmod culpa amet in\",\n    \"length\": 200\n  },\n  {\n    \"fact\": \"in\",\n    \"length\": 200\n  }\n]"
								}
							]
						},
						{
							"name": "Get a Specific Fact",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/facts/:factID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"facts",
										":factID"
									],
									"variable": [
										{
											"key": "factID",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Cat Facts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//This is a folder PR Script"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//THis is a folder test"
								]
							}
						}
					]
				},
				{
					"name": "Breeds",
					"item": [
						{
							"name": "get Breeds",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://catfact.ninja/breeds?limit=2&foo={{foobar}}",
									"protocol": "https",
									"host": [
										"catfact",
										"ninja"
									],
									"path": [
										"breeds"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"description": "This is a description"
										},
										{
											"key": "foo",
											"value": "{{foobar}}",
											"description": "THis is the foo thing"
										}
									]
								},
								"description": "Returns a a list of breeds"
							},
							"response": [
								{
									"name": "Normal operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/breeds?limit=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"breeds"
											],
											"query": [
												{
													"key": "limit",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"breed\": \"Excepteur d\",\n    \"country\": \"ad consequ\",\n    \"origin\": \"deserunt dolore\",\n    \"coat\": \"consectetur officia dolore ut irure\",\n    \"pattern\": \"nulla ea tempor magna\"\n  },\n  {\n    \"breed\": \"ex nisi\",\n    \"country\": \"dolor dolore c\",\n    \"origin\": \"aute incididunt dolor Ut\",\n    \"coat\": \"nulla ut sit eu Duis\",\n    \"pattern\": \"cupidat\"\n  }\n]"
								}
							]
						},
						{
							"name": "Add Breed",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"breed\": \"Epoxy\",\n            \"country\": \"HomeDepot\",\n            \"origin\": \"Artificial\",\n            \"coat\": \"Sticky\",\n            \"pattern\": \"Random\"\n        },",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://catfact.ninja/breeds",
									"protocol": "https",
									"host": [
										"catfact",
										"ninja"
									],
									"path": [
										"breeds"
									]
								}
							},
							"response": []
						}
					],
					"description": "Breeds"
				}
			]
		}
	]
}